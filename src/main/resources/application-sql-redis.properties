##
## SQL + Redis Persistence Strategy Configuration
## This profile configures H2 (SQL) database with Redis caching
##

##
## datasource - H2 IN-MEMORY
##
spring.datasource.url=jdbc:h2:mem:testdb
spring.datasource.driverClassName=org.h2.Driver
spring.datasource.username=sa
spring.datasource.password=

## show SQL
spring.jpa.show-sql=false
spring.jpa.properties.hibernate.format_sql=false

## database schema generation
spring.jpa.generate-ddl=true
spring.jpa.hibernate.ddl-auto=create-drop

##
## H2 console for development purposes.
## Access: http://localhost:8080/h2-console
## JDBC URL: jdbc:h2:mem:testdb
## Username: sa
## Password: (leave empty)
##
spring.h2.console.enabled=true
spring.h2.console.path=/h2-console

##
## Redis Configuration (Embedded for development)
## In production, configure external Redis server
##
spring.data.redis.host=localhost
spring.data.redis.port=6379
spring.data.redis.timeout=60000

## Redis cache configuration
spring.cache.type=redis
spring.cache.redis.time-to-live=3600000
spring.cache.redis.cache-null-values=false

##
## Disable MongoDB auto-configuration
##
spring.autoconfigure.exclude=org.springframework.boot.autoconfigure.mongo.MongoAutoConfiguration,org.springframework.boot.autoconfigure.data.mongo.MongoDataAutoConfiguration

